public class Solution 
{
    public IList<string> BinaryTreePaths(TreeNode root) 
    {
        List<string> paths = new List<string>();
        if (root != null)
        {
            DFS(root, "", paths);
        }
        return paths;
    }

    private void DFS(TreeNode node, string currentPath, List<string> paths)
    {

        if (node.left == null && node.right == null)
        {
            paths.Add(currentPath + node.val);
            return;
        }

        if (node.left != null)
        {
            DFS(node.left, currentPath + node.val + "->", paths);
        }

        if (node.right != null)
        {
            DFS(node.right, currentPath + node.val + "->", paths);
        }
    }
}

//Runtime 147 ms Beats 5.22% of users with C#
//Memory 44.40 MB Beats 100.00% of users with C#